### https://hub.docker.com/_/debian
###	https://hub.docker.com/layers/library/debian/stable-slim/images/sha256-f1ffed2840b6ba57cd13f0ff5e21ce063ad1b7fdd7a32b9521372a02ca91c1b1?context=explore
### https://hub.docker.com/layers/library/debian/bookworm-slim/images/sha256-abbf1e0df2d9631707a41780bd9d332523d10cbb14560122536210298b77f09d?context=explore


FROM debian:bookworm-slim
###	ADD file:ceffa8e71bafc0190f915774b9696a0b6cb6262d1df5f64028b570ca4055ba83	###	linux/amd64		27.8 MB
###	ADD file:b828ab72afebbd710b7ff56c884909e88d783d54b13ece60bf7e37ade80f29fd	###	linux/arm/v7	23.6 MB		
###	ADD file:14fe2ebe82b665c6115826bdff47b53c46b973bd8d00ce21c2b8a1bffae58b4f	###	linux/arm64/v8		

CMD ["bash"]


### https://www.atlantic.net/dedicated-server-hosting/how-to-install-redmine-4-2-on-debian-10/
### How to Install Redmine 4.2 on Debian 10

###	https://hub.docker.com/_/redmine/tags

FROM ruby:3.2.2-slim-bookworm

# ADD file:d29ec8ef9c05b79202b1ebc60a951e2fc11043112aa3a6b081b850241fc1358c	###	linux/amd64				74.23 MB
# ADD file:ab1eda92c1b279347a723af7f38d9b13c70c48bd81ce5442c13a237467c7b453	###	linux/arm/v7			63.51 MB
# ADD file:4e87a99f6ed51f4803830c734013211d8efadd1c3fff91f910e770f3616d9ba8	###	linux/arm64/v8		73.11 MB


# explicitly set uid/gid to guarantee that it won't change in the future
# the values 999:999 are identical to the current user/group id assigned
RUN groupadd -r -g 999 redmine && useradd -r -g redmine -u 999 redmine

RUN set -eux; \
	apt-get update; \
	apt-get install -y --no-install-recommends \
		nano mc wget iproute2 \
    apt-transport-https ca-certificates dirmngr gnupg2 \
    curl wget bzr git mercurial \
		openssh-client subversion \
		\
# we need "gsfonts" for generating PNGs of Gantt charts
# and "ghostscript" for creating PDF thumbnails (in 4.1+)
###		apt-get install -y --no-install-recommends \
		ghostscript gsfonts imagemagick libmagickwand-dev \
		gosu tini; \
# grab gosu for easy step-down from root
# grab tini for signal processing and zombie killing
###	; \
# allow imagemagick to use ghostscript for PDF -> PNG thumbnail conversion (4.1+)
	sed -ri 's/(rights)="none" (pattern="PDF")/\1="read" \2/' /etc/ImageMagick-6/policy.xml; \

### 	rm -rf /var/lib/apt/lists/*

ENV RAILS_ENV production
WORKDIR /usr/src/redmine
ENV HOME /home/redmine

export RAILS_ENV='production' 
export WORKDIR='/usr/src/redmine'
export HOME='/home/redmine'

# https://github.com/docker-library/redmine/issues/138#issuecomment-438834176
# (bundler needs this for running as an arbitrary user)

RUN set -eux; \
	[ ! -d "$HOME" ]; \
	mkdir -p "$HOME"; \
	chown redmine:redmine "$HOME"; \
	chmod 1777 "$HOME"

ENV REDMINE_VERSION 5.0.6
ENV REDMINE_DOWNLOAD_URL https://www.redmine.org/releases/redmine-5.0.6.tar.gz
ENV REDMINE_DOWNLOAD_SHA256 488fe08f37a8eb1011415922a8ea743b7f38d8a7a5f8822950a34a375dcf08ee

#	export REDMINE_VERSION='5.0.6'
#	export REDMINE_DOWNLOAD_URL='https://www.redmine.org/releases/redmine-5.0.6.tar.gz'
#	export REDMINE_DOWNLOAD_SHA256='488fe08f37a8eb1011415922a8ea743b7f38d8a7a5f8822950a34a375dcf08ee'



RUN set -eux; \
# if we use wget here, we get certificate issues (https://github.com/docker-library/redmine/pull/249#issuecomment-984176479)
	curl -fL -o redmine.tar.gz "$REDMINE_DOWNLOAD_URL"; \
	echo "$REDMINE_DOWNLOAD_SHA256 *redmine.tar.gz" | sha256sum -c -; \
	tar -xf redmine.tar.gz --strip-components=1; \
	rm redmine.tar.gz files/delete.me log/delete.me; \
	mkdir -p log public/plugin_assets sqlite tmp/pdf tmp/pids; \
	chown -R redmine:redmine ./; \
# log to STDOUT (https://github.com/docker-library/redmine/issues/108)
	echo 'config.logger = Logger.new(STDOUT)' > config/additional_environment.rb; \
# fix permissions for running as an arbitrary user
	chmod -R ugo=rwX config db sqlite; \
	find log tmp -type d -exec chmod 1777 '{}' +

RUN set -eux; \
	\
	savedAptMark="$(apt-mark showmanual)"; \
	apt-get update; \
	apt-get install -y --no-install-recommends \
	lighttpd \
	build-essential libxslt1-dev libxml2-dev zlib1g-dev \
  freetds-dev gcc libpq-dev make patch xz-utils; \
  ### apache2 apache2-dev libapache2-mod-passenger; \ 
	#
	rm -rf /var/lib/apt/lists/*; \
	\
	### 
	apt-get update; \
	apt-get install -y --no-install-recommends gosu; \
	gosu redmine bundle config --local; \ 
	gem install puma;\
	gem update --system 3.4.20;\
  ### without 'development test'; \
# https://github.com/redmine/redmine/commit/23dc108e70a0794f444803ac827a690085dcd557
# ("gem puma" already exists in the Gemfile, but under "group :test" and we want it all the time)


#### ------ RESTART FROM HERE 


	puma="$(grep -E "^[[:space:]]*gem [:'\"]puma['\",[:space:]].*\$" Gemfile)"; \
	{ echo; echo "$puma"; } | sed -re 's/^[[:space:]]+//' >> Gemfile; \
# fill up "database.yml" with bogus entries so the redmine Gemfile will pre-install all database adapter dependencies
# https://github.com/redmine/redmine/blob/e9f9767089a4e3efbd73c35fc55c5c7eb85dd7d3/Gemfile#L50-L79
	echo '# the following entries only exist to force `bundle install` to pre-install all database adapter dependencies -- they can be safely removed/ignored' > ./config/database.yml; \
	for adapter in mysql2 postgresql sqlserver sqlite3; do \
		echo "$adapter:" >> ./config/database.yml; \
		echo "  adapter: $adapter" >> ./config/database.yml; \
	done; \
	gosu redmine bundle install --jobs "$(nproc)"; \
	rm ./config/database.yml; \
# fix permissions for running as an arbitrary user
	chmod -R ugo=rwX Gemfile.lock "$GEM_HOME"; \
	rm -rf ~redmine/.bundle; \
	\
# reset apt-mark's "manual" list so that "purge --auto-remove" will remove all build dependencies
	apt-mark auto '.*' > /dev/null; \
	[ -z "$savedAptMark" ] || apt-mark manual $savedAptMark; \
	find /usr/local -type f -executable -exec ldd '{}' ';' \
		| awk '/=>/ { so = $(NF-1); if (index(so, "/usr/local/") == 1) { next }; gsub("^/(usr/)?", "", so); print so }' \
		| sort -u \
		| xargs -r dpkg-query --search \
		| cut -d: -f1 \
		| sort -u \
		| xargs -r apt-mark manual \
	; \
	apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \
rm -rf /var/lib/apt/lists/*

VOLUME /usr/src/redmine/files

COPY docker-entrypoint.sh /
ENTRYPOINT ["/docker-entrypoint.sh"]

EXPOSE 3000
CMD ["rails", "server", "-b", "0.0.0.0"]
